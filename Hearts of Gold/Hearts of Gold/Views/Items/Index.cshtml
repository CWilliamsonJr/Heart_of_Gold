@using Hearts_of_Gold.Models
@model Tuple<List<Item>, List<Request>>
@{
    ViewBag.Title = "Item page";
    var requests = Model.Item2;
    var isAuthorized = Request.IsAuthenticated;
}
<h2>List of Items for Donation</h2>
<div class="col-sm-12">
    <div class="col-sm-6">
        <div>
            @Html.ActionLink("Click to view a list of Donation Locations", "Index", "Donation_Location", routeValues: null, htmlAttributes: new { @class = "btn btn-default", target = "_blank" }) &nbsp;&nbsp;
        @if (isAuthorized)
        {
            @Html.ActionLink("Click to list an item for donation", "Create", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })
        }

    </div>
    <br />
    @if (isAuthorized)
    {
        <div>
            @Html.ActionLink("Click to see a list of your items", "MyItems", routeValues: null, htmlAttributes: new { @class = "btn btn-default" }) &nbsp;&nbsp;

            @Html.ActionLink("Click view your requested Items", "Index", "Requests", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })
        </div>
    }
        <br />
    </div>
    <div class="col-sm-6">
        @using (Html.BeginForm())
        {
            <div class="form-group col-sm-12">
                @Html.LabelFor(model => model.Item1[0].CategoryID, "Sort By Category", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Item1[0].CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-sm-12">
                @Html.LabelFor(model => model.Item1[0].LocationID,"Sort by Location" ,htmlAttributes: new { @class = "control-label col-md-2" })
                
                <div class="col-md-8">
                    @Html.DropDownList("LocationID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Item1[0].LocationID, "", new { @class = "text-danger" })
                </div>
            </div>
        }
    </div>
</div>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Item1[0].Item1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item1[0].Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item1[0].Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item1[0].Donation_Categories.Categories)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item1[0].Donation_Location.BusinessName)
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model.Item1)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Item1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Donation_Categories.Categories)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Donation_Location.BusinessName)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.ItemID })
                @if (isAuthorized)
                {
                    if (item.User.AspNetUsersId == ViewBag.userID) // checks to see if the item belongs to the user.
                     {
                         <text>|</text>
                         @Html.ActionLink("Edit", "Edit", new {id = item.ItemID})
                         <text>|</text>
                         @Html.ActionLink("Delete", "Delete", new {id = item.ItemID})

                     }
                     else
                     {
                         bool requestFound = false; // used to detrmine if a request was found.
                         <text>|</text>

                         foreach (var request in requests)
                         {
                             if (item.ItemID == request.DonationItemID)
                             {
                                 @Html.ActionLink("Already Requested", "Edit", "Requests", new {id = request.RequestID}, new {title = "Edit your current request"})
                                 requestFound = true;
                             }
                         }

                         if (!requestFound)
                         {
                             @Html.ActionLink("Request Item", "MakeRequest", "Requests", new {id = item.ItemID}, new {title = "Make a Request to Pick up the Item"})
                        }
                    }
                }
                else
                {
                    <text>|</text>
                    @Html.ActionLink("Login to request this item", "Login", "Account");
                }
            </td>
        </tr>
    }
</table>
