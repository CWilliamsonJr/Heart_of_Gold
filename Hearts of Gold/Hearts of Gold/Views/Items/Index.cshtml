@using Hearts_of_Gold.Models
@model Tuple<List<Item>, List<Request>>
@{
    ViewBag.Title = "Item page";
    var requests = Model.Item2;

}
<h2>List of Items for Donation</h2>
<p>@Html.ActionLink("Click to view a list of Donation Locations", "Index", "Donation_Location", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })</p>
<p>
    @Html.ActionLink("Click to list an item for donation", "Create", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })
</p>
<p>@Html.ActionLink("Click to list a list of your items", "MyItems", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })</p>
<p>@Html.ActionLink("Click view your requested Items", "Index","Requests", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Item1[0].Item1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item1[0].Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item1[0].Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item1[0].Donation_Categories.Categories)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item1[0].Donation_Location.BusinessName)
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model.Item1)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Item1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Donation_Categories.Categories)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Donation_Location.BusinessName)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.ItemID })
                @if (item.User.AspNetUsersId == ViewBag.userID) // checks to see if the item belongs to the user.
                {
                    <text>|</text>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ItemID })
                    <text>|</text>
                    @Html.ActionLink("Delete", "Delete", new { id = item.ItemID })

                }
                else
                {
                    bool requestFound = false; // used to detrmine if a request was found.
                    <text>|</text>

                    foreach (var request in requests)
                    {
                        if (item.ItemID == request.DonationItemID)
                        {
                            @Html.ActionLink("Already Requested", "Edit", "Requests", new { id = request.RequestID }, new { title = "Edit your current request" })
                            requestFound = true;
                        }
                    }

                    if (!requestFound)
                    {
                        @Html.ActionLink("Request Item", "MakeRequest", "Requests", new { id = item.ItemID }, new { title = "Make a Request to Pick up the Item" })
                    }
                }
            </td>
        </tr>
    }
</table>
